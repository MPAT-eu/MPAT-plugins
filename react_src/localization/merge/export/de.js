
/**
  * !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
  * ! WARNING: This is a generated file, any modifications may be overwritten !
  * !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
  *
  * Generated by "merge2file"
  *
  * Date: Mon May 28 2018 14:06:46 GMT+0200 (CEST)
  * Export target: "/Users/dufourd/IdeaProjects/MPAT-github/MPAT-core/web/app/plugins/mpat-plugins/react_src/localization/merge/export/de.js"
  * Executor: dufourd
  * Duration: 2 ms.
*/
const de = {
  appMgr: {
    exclude: "Ausschließen",
    navModels: {
      slideflow: "Die Slideflow-Navigation ermöglicht es dem Redakteur, Anwendungen zu erstellen, die ähnlich einer PowerPoint Präsentation, entweder horizontal oder vertikal geführt sind. Dabei ist es möglich, die Reihenfolge in der die Seiten präsentiert werden sollen, zu bestimmen. <br /> Die Seiten können wählbare Hotspots enthalten, um zusätzliche Inhalte und Informationen in Bezug auf die aktuell präsentierte Seite bereitzustellen. Die Navigation zwischen den einzelnen Seiten ist sequentiell, so dass der Redakteur auf Informationen, die auf früheren Seiten präsentiert wurden schlecht zurückgreifen kann. Die Slideflow-Navigation bietet sich für Applikationen die eher Erzählcharakter haben, an.",
      timeline: "Event-basierte Navigation ermöglicht die Darstellung von HbbTV-Inhalten getriggert durch das Fernsehprogramm. Das bekannteste Beispiel ist die Präsentation des „Red Buttons“ bei Programmstart. Der „Red Button“ signalisiert dem Betrachter, dass zusätzliche Informationen verfügbar sind. Das Erscheinen der Schaltfläche wird in der Regel durch MPEG-Stream-Ereignisse oder alternative Kanäle wie z.B. Web-Sockets oder aber auch durch Applikations-Pull-Anfragen ausgelöst. <br/> <br/> Event-basierte Navigation eignet sich am besten für kurze Informationen, die auf den eigentlichen Inhalt nur Verweisen.",
      website: "Das Webseiten-Modell wird am häufigsten für HbbTV Applikationen verwendet. Von einer Startseite aus erhält der Benutzer Zugriff auf alle zusätzlichen Inhalte. Steuern tut der Nutzer die Applikation entweder mit den Pfeiltasten seiner Fernbedienung - ähnlich wie mit der Mouse auf einer Webseite, oder über Shortcuts, indem auch Farb- und Zifferntasten verwendet werden. <br/> Bei diesem Modell gibt es keine geführte Bedienung, der Nutzer kann frei durch die Applikation navigieren, deshalb muss jede Seite so aufgebaut sein, dass sie auch für sich alleine stehen kann."
    }
  },
  navModel: {
    sampleApp: "Beispiel Applikation",
    components: "Komponenten"
  },
  componentLoader: {
    containerTitle: {
      label: "Container Styles"
    },
    fontSize: {
      label: "Schriftgröße",
      placeholder: "Größe in px"
    },
    fontWeight: {
      label: "Schriftstärke",
      placeholder: "Zahlen von 100 bis 900"
    },
    border: {
      label: "Rahmen",
      placeholder: "CSS Rahmen Notation (z.B. 1px solid #000)"
    },
    borderRadius: {
      label: "Rahmen Radius",
      placeholder: "Radius in px"
    },
    margin: {
      label: "Margin",
      placeholder: "Abstand in px"
    },
    padding: {
      label: "Padding",
      placeholder: "Abstand in px"
    },
    color: {
      label: "Schriftfarbe"
    },
    backgroundColor: {
      label: "Hintergrundfarbe"
    },
    lineHeight: {
      label: "Line Height",
      placeHolder: "Line height in px"
    }
  },
  formTypes: {
    fontSize: {
      label: "Schriftgröße",
      placeholder: "14pt"
    },
    fontWeight: {
      label: "Schriftstärke",
      placeholder: "Zahlen von 100 bis 900"
    },
    border: {
      label: "Rahmeneigenschaften",
      placeholder: "1px solid #000"
    },
    borderRadius: {
      label: "Rahmen Radius",
      placeholder: "5px"
    },
    margin: {
      label: "Margin",
      placeholder: "0px"
    },
    padding: {
      label: "Padding",
      placeholder: "0px"
    },
    color: {
      label: "Schriftfarbe",
      placeholder: "rgba() Notation, HEX Notation, color name"
    },
    backgroundColor: {
      label: "Hintergrundfarbe",
      placeholder: "rgba() Notation, HEX Notation, color name"
    }
  },
  componentStateSelector: {
    enter: "Trigger, wenn OK gedrückt wird",
    focus: "Trigger, wenn das Objekt fokussiert wird",
    chooseAnAction: "Wähle eine Aktion",
    assetFinderPlaceholder: "TYPE ASSET NAME"
  },
  pageSelector: {
    loading: "LADEN",
    select: "AUSWÄHLEN",
    noTitle: "kein Titel",
    error: "FEHLER"
  },
  styles: {
    choose: "ÖFFNEN",
    typeUrlOrSelectMedia: "Eingabe einer URL oder Auswahl einer Mediendatei",
    ttSize: "Size in px, em, rem, pt, %",
    ttChoose: "Select the option you wish to use",
    ttImage: "Typme image url or choose from media library"
  },
  stylesPopup: {
    done: "Fertig"
  },
  textSubmit: {
    ok: "OK"
  },
  hotSpotEdit: {
    edit: "bearbeiten",
    title: "Hot Spot Symbol",
    active: "Aktiv",
    background: "Hintergrund",
    icon: "Symbol",
    orCustomFile: "oder eigene Datei",
    focused: "Fokussiert",
    normal: "Normal",
    iconColour: "Symbolfarbe",
    contentPosition: "Position des Inhaltes",
    location: "Lage",
    overTheIcon: "Über dem Symbol",
    underTheIcon: "Unter dem Symbol",
    static: "Absolut/statisch",
    staticContentPosition: "Statische Content Position",
    top: "Oben",
    left: "Links",
    contentSize: "Content Größe (px)",
    width: "Breite",
    height: "Höhe",
    ifEmptyFitContent: "falls leer, wird es an den Inhalt angepasst",
    keyBinding: "Key Binding",
    done: "Fertig",
    or: "OR",
    defaultIfAvailable: "Voreinstellung, falls möglich",
    customIcon: "Eigenes Symbol",
    choose: "Öffnen",
    selectRemoteButton: "Wähle eine Fernbedienungstaste"
  },
  imageCropper: {
    cropRatio: "Seitenverhältnis anpassen",
    cropImage: "Bild anpassen",
    restore: "Wiederherstellen",
    crop: "Anpassen",
    free: "Freihand",
    ttCropRatio: "Select crop ratio",
    ttCropImage: "[tooltip Crop image]",
    ttRestore: "Undo crop changes",
    ttCrop: "Crop to selection",
    ttFree: "[tooltip Free]"
  },
  layoutBuilder: {
    unused: "Nicht benutzt",
    returnToPageEditor: "ZURÜCK ZUM SEITENEDITOR",
    save: "SPEICHERN",
    layoutBuilder: "Layout Editor",
    width: "Breite",
    height: "Höhe",
    left: "Links",
    top: "Oben",
    layoutTitle: "Layout Bezeichnung",
    placeholderTitle: "TITEL HIER EINGEBEN",
    previewBackground: "Vorherigen Hintergrund",
    placeholderBg: "URL ODER RGB EINGEBEN",
    selectFile: "Datei öffnen",
    addAnotherBox: "Box hinzufügen",
    add: "Hinzufügen",
    showSafeArea: "ANZEIGEN DER SAFE AREA",
    showGridLines: "ANZEIGEN VON HILFSLINIEN",
    layoutUsedInPages: "LAYOUT WIRD BEREITS VERWENDET IN",
    ttDeleteThisBox: "Delete this box",
    ttPinBox: "Lock the location of this box",
    ttTitle: "Give this layout a title so you can easily identify it",
    ttPreviewBg: "Add a temporary background so you can align your layout",
    ttAddBox: "Add a box to the layout",
    ttSafeZone: "Toggle the border markings, which show the 'safe' internal area to place your boxes",
    ttGridLines: "Toggle the gridlines, which help you align your layout"
  },
  undoRedo: {
    undo: "RÜCKGÄNGING",
    redo: "WIEDERHERSTELLEN"
  },
  gallery: {
    removeImage: "Bild entfernen",
    gallerySettings: "Galerie Einstellungen",
    orientation: "Orientierung",
    horizontal: "Horizontal",
    vertical: "Vertikal",
    imageCover: "Bild an Box anpassen",
    zoomToFit: "Bild an Container anpassen",
    autoPlay: "Autoplay",
    ms: "Millisekunden",
    repeat: "Wiederholen",
    loop: "Loop",
    useMediaKeys: "Verwenden von Mediakeys",
    dots: "Punkte",
    arrows: "Pfeile",
    chooseImages: "Bilddatei öffnen",
    clearSelections: "Auswahl löschen",
    noImages: "Keine Bilder ausgewählt",
    closeCropEditor: "Editor schließen",
    ttOrient: "Which axis should the images scroll along",
    ttImageCover: "Zoom images to fit the container",
    ttAutoplay: "Auto play the images on page load after n milliseconds",
    ttRepeat: "Loop the images",
    ttUseMediaKeys: "Use the media keys on the controller to navigate the gallery",
    ttDots: "Show dots under/beside the gallery for navigation",
    ttArrows: "Show arrows to navigate the gallery",
    ttClear: "Clear the gallery images selections"
  },
  stateEditor: {
    title: "Komponenten Editor",
    stateManagement: "State Management",
    saveAsTemplate: "Template speichern",
    txtToggleStateDisplay: "State",
    ttTitle: "[tooltip title]",
    phTitle: "Insert state title"
  },
  pageModelCreator: {
    chooseCustomBox: "Wähle nutzerspezifische Boxen",
    boxNb: "Box-Nummer",
    isItEditable: "Editierbar",
    editableOrStyles: "Editierbare Ansichten",
    addOrRemoveFromAllowedTypes: "Hinzufügen oder Entfernen von möglichen Komponenten",
    allowedTypes: "Mögliche Ansichten",
    compontentTypeToAddOrRemove: "Komponenten Hinzufügen oder Entfernen",
    any: "ANDERE",
    cancel: "Abbrechen",
    create: "Erstellen"
  },
  pageEditor: {
    title: "Seiten Editor",
    pageTitle: "Titel der Seite",
    pageLink: "Link der Seite",
    pageLayout: "Seitenlayout",
    pageParent: "Übergeordnete Seiten",
    pageStyles: "Seitenansicht",
    pageBg: "Seitenhintergrund",
    scheduleUpdate: "Updates planen",
    unsavedChanges: "Sie haben nicht gespeicherte Änderungen",
    untitled: "Unbezeichnet",
    errorWhileSaving: "Fehler während des Speicherns",
    confirmLeave: "Sie haben nicht gespeicherte Änderungen, wollen Sie wirklich die Seite verlassen?",
    chooseBgColor: "Wähle die Hintergrundfarbe",
    show: "Zeigen",
    or: "ODER",
    movedToStyle: "Die Seitenhintergrundfarbe und die Medien sind nun unter Seitenansicht zu finden",
    createModelFromPage: "Seitenmodell erstellen",
    changeStyles: "Ändere Ansicht",
    file: "Datei",
    create: "Erstellen",
    pageFromModel: "Seite aus Seitenmodell generieren",
    quickLink: "Seitenwechsel auf",
    ttQuickLink: "Shortcut to your other pages",
    saveModelInstance: "SPEICHERE MODELLINSTANZ",
    savePage: "SPEICHERE SEITE",
    duplicate: "duplizieren",
    ttDuplicate: "Duplicate this page",
    editLayout: "LAYOUT BEARBEITEN",
    ttEditLayout: "Switch to edit layout",
    ttUndoRedo: "Undo/Redo your changes",
    ttSavePage: "Save your changes to this page",
    typeUrlOrRgb: "URL ODER RGB EINGEBEN",
    noParent: "keine übergeordnete Seite",
    phTitle: "ENTER TITLE HERE",
    phBorderSize: "size in px",
    phFontSize: "size in px, em, rem, pt, %",
    descActiveComponent: "if no value is set, global settings defined in customizer are applied.",
    ttTitle: "Give this page a title so you can easily identify it",
    ttLayout: "Choose one of your layouts as a template for this page",
    ttParent: "Choose one of your other pages as  the parent for this page",
    ttLink: "Open in Firefox with FireHbbTV activated",
    titleDownloadFireHbbTV: "Download the firefox add-on for previewing HbbTV pages",
    titleDownloadFirefox: "Download Firefox to use the add-on to visualize HbbTV pages",
    ttToggleUpdate: "Schedule this update rather than going live immediately",
    ttPageStyles: "Edit the page and component CSS styles (colours, fonts, borders)",
    ttCreateModelFromPage: "Create a model based on this page",
    ttEditIcon: "Edit this component",
    ttToggleDefault: "Toggle this as the default selected component on page",
    ttBackToPageEditor: "[tooltip: go back to page editor]",
    ttToggleState: "[tooltip: toggle state management]"
  },
  componentEditor: {
    editComponentStyle: "Komponentenansicht bearbeiten",
    editInner: "Ändern...",
    titleComponentStyle: "Komponenten Ansicht",
    componentLabel: "Komponenten Bezeichnung",
    componentType: "Komponenten Auswahl",
    chooseView: "Wähle Ansicht",
    hideFocus: "Focus nicht anzeigen",
    navigable: "Navigierbar",
    scrollable: "Scrollable",
    hotSpot: "Hot Spot",
    companionScreen: "Companion Screen",
    thisIsAModel: "Das ist ein Modell",
    editProtected: "Bearbeitung nicht möglich",
    editStubborn: "Trotzdem Bearbeiten",
    ttLabel: "Add a label to identify this component",
    ttType: "Change the component type",
    ttView: "[tooltip choose view]",
    ttFocus: "Show/Hide whether this component has focus",
    ttHotSpot: "Is this component a 'Hot Spot'",
    ttNavigable: "Can the user navigate to this component",
    ttScrollable: "[tooltip component scrollable]",
    ttCompScr: "Is this component shown on a companion screen",
    ttEditStyle: "Edit how this component looks (borders, colours, fonts, margin, padding...)",
    ttTargetComponent: "[tooltip component target]",
    scrolllable: "Scrollbar"
  },
  chrome: {
    ttchromeFields: "[tooltip chrome fields]",
    ttSaturation: "[tooltip saturation - pick the saturation of chosen color]",
    ttHue: "[tooltip hue]",
    ttAlpha: "[tooltip alpha]"
  },
  audio: {
    title: "Audio Einstellungen",
    audioUrlInput: "Quelldatei",
    audioUrlLabel: "Quelldatei",
    autoStart: "Autostart",
    chooseFile: "Datei öffnen",
    whenPageLoads: "Wenn die Seite lädt",
    repeat: "Wiederholen",
    loop: "Loop",
    ttAudioUrl: "Load audio from URL",
    ttChooseFile: "Select audio from disc or library",
    ttAutostart: "Play audio on page load when the page loads",
    ttRepeat: "Loop/Repeat audio"
  },
  broadcast: {
    notice1: "Die Broadcast Komponente stellt das Fernsehsignal auf dem Fernseher da.",
    notice2: "Falls Sie diese Komponente auf Ihrem Rechner mit Hilfe von",
    notice3: "oder Ähnlichem testen, wird die Komponente nur als schwarze Box dargestellt."
  },
  clone: {
    choose: "Öffnen",
    modelComponentPage: "Seitenmodelle",
    layoutBox: "Layout Box",
    component: "Komponente",
    ttSelectModel: "Select the model/page that contains the component you want to clone",
    ttSelectComponent: "Select the component to clone",
    ttSourceLayout: "[tooltip source Layout]"
  },
  image: {
    title: "Bilder Einstellungen",
    url: "Bilddatei URL",
    ttUrl: "Use a URL to fetch the image for this component",
    upload: " Upload Bilddatei",
    ttUploadImg: "Upload an image for this component",
    chooseFromLibrary: "oder wähle ein Bild aus der Bibliothek",
    ttChooseImg: "Select an image from the library for this component",
    choose: "Öffnen"
  },
  launcher: {
    backend: {
      launcherSettings: "Launcher Einstellungen",
      toLinkAPage: "Um auf eine bestimmte Komponente der Seite zu verlinken, muss folgendes an den Link gehängt werden",
      launcherOrient: "Launcher Orientation",
      horizontal: "Horizontal",
      vertical: "Vertikal",
      format: "Launcher Format",
      landscape: "Querformat",
      square: "Quadratisch",
      squareWithInfo: "Quadratisch mit Information",
      portrait: "Hochformat",
      launcherStyle: "Launcher Ansicht",
      optionStandard: "Standard",
      optionArte: "Arte",
      scrollStyle: "Scrollart",
      optionCarousel: "Karussell",
      optionPagination: "Seitennummerierung",
      paginationLoop: "Loop",
      showPaginationInfo: "Zeige Seitennummerierung",
      addLauncherElement: "Füge Launcher Element hinzu",
      launcherThumbnail: "Launcher Thumbnail",
      launcherThumbnailUrl: "Launcher Thumbnail URL",
      chooseThumbnail: "Thumbnail öffnen",
      title: "Titel",
      launcherTitle: "Launcher Titel",
      role: "Rolle",
      link: "Link",
      controlTargetComponent: "Zielkomponente steuern",
      chooseTargetFirst: "Erst Zielkomponente auswählen",
      launcherTargetUrl: "Launcher Ziel-URL",
      pages: "Seiten",
      state: "Status",
      description: "Beschreibung",
      launcherDescription: "Launcher Beschreibung",
      deleteLauncherElement: "Lösche Launcher Element",
      optionalContentIcon: "Eigenes Logo",
      none: "keine",
      audio: "Audio",
      picture: "Bild",
      text: "Text",
      video: "Video",
      ttLauncherOrientation: "[tooltip launcher orientation]",
      ttElementFormat: "[tooltip elementFormat]",
      ttLauncherStyle: "[tooltip LauncherStyle]",
      ttScrollStyle: "[tooltip ScrollStyle]",
      ttShowPaginationInfo: "[tooltip ShowPaginationInfo]",
      ttColumnsRows: "[tooltip Columns and Rows]",
      ttAddLauncherElement: "[tooltip addLauncherElement]",
      ttThumbnailUrl: "[tooltip Launcher Thumbnail URL]",
      ttThumbnailChoose: "[tooltip LChoose Launcher Thumbnail]",
      ttTitle: "[tooltip title]",
      ttRole: "[tooltip ttRole]",
      ttUrl: "[tooltip Target Url]",
      ttPages: "[tooltip PageSelector]",
      ttComponent: "[tooltip ComponentStateSelector]",
      ttDescription: "[tooltip Description]",
      ttDeleteElement: "[tooltip deleteLauncherElement]",
      ttOptionalContentIcon: "[tooltip optionalContentIcon]",
      menuOrient: "Menü Orientierung"
    },
    frontend: {
      monthNames: [
        "JANUAR",
        "FEBRUAR",
        "MÄRZ",
        "APRIL",
        "MAI",
        "JUNI",
        "JULI",
        "AUGUST",
        "SEPTEMBER",
        "OKTOBER",
        "NOVEMBER",
        "DEZEMBER"
      ],
      dayNames: [
        "SONNTAG",
        "MONTAG",
        "DIENSTAG",
        "MITTWOCH",
        "DONNERSTAG",
        "FREITAG",
        "SAMSTAG"
      ]
    }
  },
  link: {
    linkSettings: "Link Einstellungen",
    linkImageUrl: "Link als Bild",
    placeHolderLinkImageUrl: "BILDDATEI URL",
    ttLinkImageUrl: "[tooltip LINK IMAGE URL]",
    chooseLinkImage: "Bilddatei öffnen",
    ttChooseLinkImage: "[tooltip Choose Link Image]",
    linkFocusedImageUrl: "Link Focused Image URL",
    placeHolderLinkFocusedImageUrl: "LINK FOCUSED IMAGE URL",
    ttLinkFocusedImageUrl: "[tooltip LINK FOCUSED IMAGE URL]",
    chooseLinkFocusedImage: "Choose Link Focused Image",
    ttChooseLinkFocusedImage: "[tooltip Choose Link Focused Image]",
    linkLabel: "Link Bezeichnung",
    placeHolderLinkLabel: "BEZEICHNUNG",
    ttLinkLabel: "[tooltip LINK LABEL]",
    or: "ODER",
    linkTarget: "Link URL",
    ttLinkTarget: "[tooltip Link Target]",
    placeHolderLinkUrl: "URL",
    pages: "Seiten",
    ttPages: "[tooltip Pages]",
    imageLayoutCover: "Bild an Box anpassen",
    ttImageLayoutCover: "[tooltip Image Layout Cover]"
  },
  list: {
    listSettings: "Listen Einstellungen",
    addListElement: "Füge ein Listen Element hinzu",
    ttAddListElement: "[tooltip Add List Element]",
    title: "Titel",
    ttTitle: "[tooltip Element Title]",
    placeHolderTitle: "ELEMENT TITEL",
    url: "URL",
    ttUrl: "[tooltip URL]",
    placeHolderUrl: "ELEMENT ZIEL-URL",
    description: "Beschreibung",
    ttDesc: "[tooltip ELEMENT DESCRIPTION]",
    placeHolderDesc: "ELEMENT BESCHREIBUNG",
    deleteListElement: "Lösche Listen Element",
    ttDeleteListElement: "[tooltip Delete List Element]"
  },
  menu: {
    menuSettings: "Menü Einstellungen",
    addMenuItem: "Füge Menüpunkt hinzu",
    ttAddMenuItem: "[tooltip Add Menu item]",
    title: "Titel",
    ttTitle: "[tooltip title]",
    sideMenu: "Aufklapp-Menü",
    showAsSideMenu: "Zeige Menü als Aufklapp-Menü",
    ttSideMenu: "Show menu as side menu",
    menuOrient: "Menü Orientierung",
    ttMenuOrient: "Menu Orientation",
    horizontal: "Horizontal",
    vertical: "Vertikal",
    loop: "Loop",
    restart: "Egal ob die Navigation nach dem letzten Menüpunkt wieder beim ersten Menüpunkt beginnt (und umgekehrt) oder nicht",
    ttLoop: "Whether the navigation should restart from first item after the last one ( and viceversa ) or not.",
    showButtons: "Menüpunkte als Buttons",
    ttShowButtons: "Show Buttons",
    showRemoteKeys: "Zeige Fernbedienungstasten als Icons an",
    ttShowRemoteKeys: "Show Remote Keys",
    selectAction: "Wähle eine Aktion aus",
    goToPrevPage: "Gehe zu vorheriger Seite",
    toggleApplication: "Wechsle Applikationsmodus (zeigen/verstecken)",
    label: "Bezeichnung",
    ttLabel: "[tooltip label]",
    placeHolderLabel: "MENÜ TEXT",
    remoteKey: "Fernbedienungstaste",
    remoteControlKey: "Fernbedienungstaste kontrollieren",
    ttRemoteControlKey: "Remote control key",
    role: "Rolle",
    ttRole: "[tooltip role]",
    link: "Link",
    controlApplication: "Applikation kontrollieren",
    controlTargetComponent: "Zielkomponente kontrollieren",
    launchAppViaAIT: "Starte Applikation via AIT",
    url: "URL",
    placeHolderUrl: "ZIEL-URL",
    ttUrl: "Target url",
    pages: "Seiten",
    ttPages: "Pages",
    appId: "App ID",
    ttAppId: "App ID",
    fallbackUrl: "Fallback URL",
    ttFallbackUrl: "Fallback URL",
    appAction: "Aufgabe der Applikation",
    ttAppAction: "Application Action",
    state: "Status",
    ttState: "[tooltip State]",
    addItem: "Weiterer Menüpunkt",
    ttAddItem: "Add menu item",
    deleteItem: "Lösche Menüpunkt",
    ttDeleteItem: "Delete menu item"
  },
  redbutton: {
    redButtonSettings: "Red Button Einstellung",
    buttonImage: "Bild für Button",
    placeHolderImageUrl: "URL zur Bilddatei",
    ttImageUrl: "[tooltip IMAGE URL]",
    chooseImage: "Bilddatei öffnen",
    ttChooseImage: "[tooltip Choose Image]",
    redButtonLink: "Red Button Link",
    placeHolderRedButtonLink: "LINK URL",
    ttRedButtonLink: "[tooltip redbutton LINK URL]",
    fadeInTime: "Fade-in Zeit (s)",
    ttFadeInTime: "[tooltip Fade-in Time in seconds]",
    placeHolderFadeInTime: "SEKUNDEN",
    displayDuration: "Anzeigedauer (s)",
    ttDisplayDuration: "[tooltip Display Duration in seconds]",
    placeHolderDisplayDuration: "SEKUNDEN"
  },
  scribbleLive: {
    noPreviewAvailable: "ScribleLive Feed. Keine Vorschau möglich.",
    title: "Scribble Live",
    hint1: "Hinweis: Bitte ",
    hint2: "für Spracheinstellungen nutzen (um zeitrelevante Informationen darzustellen wie z.B.",
    hint3: "vor einem Jahr",
    ttFeedTitle: "[tooltip FeedTitle]",
    ttFeedId: "[tooltip FeedId]",
    ttFeedToken: "[tooltip FeedToken]",
    ttPolling: "[tooltip Polling]",
    ttFeedSize: "[tooltip FeedSize]"
  },
  scrolledText: {
    title: "ScrolledText Einstellungen",
    arrowColor: "Pfeilfarbe",
    activeArrowColor: "Pfeilfarbe aktiv",
    arrowPlacement: "Pfeilanordnung",
    onText: "im Text",
    left: "links",
    right: "rechts",
    aboveBelow: "oben/unten",
    outside: "außen",
    noArrows: "keine Pfeile",
    ttArrowColor: "[tooltip arrow color]",
    ttActiveArrowColor: "[tooltip active arrow color]",
    ttArrowPosition: "[tooltip arrow position]"
  },
  toggleTracking: {
    title: "Ändere Tracking Einstellungen",
    enabledText: "Aktiviere Text",
    ttEnabledText: "[tooltip Enabled Text]",
    disabledText: "Sperre Text",
    ttDisabledText: "[tooltip Disabled Text]",
    button: "Button",
    ttButton: "[tooltip Button]"
  },
  video: {
    title: "Video Einstellungen",
    asset: "Medien",
    src: "Videoquelle",
    placeHolderSrc: "VIDEO URL",
    or: "ODER",
    chooseVideo: "Videodatei öffnen",
    thumbnail: "Video Thumbnail",
    placeHolderThumbnail: "THUMBNAIL URL",
    chooseThumbnail: "Thumbnail öffnen",
    autoPlay: "Autoplay",
    startPlaybackWhenPage: "Starte das Video mit Seitenaufruf",
    repeat: "Wiederholen",
    loop: "Loop video",
    fullscreenStart: "Fullscreen Modus starten",
    startVideoFullScr: "Starte Video in Fullscreen Modus",
    removeBlackBars: "Entferne schwarze Balken",
    zoomVideo: "Video skalieren um schwarze Balken zu vermeiden",
    playIcon: "Play Symbol",
    showPlayIcon: "Play Symbol anzeigen, wenn das Video bereit ist",
    showNavBar: "Anzeige der Navigation"
  },
  timeline: {
    wizard: {
      title: "TimeLine Wizard",
      welcome: "Welcome to the timeline wizard. There are a few questions you need to answer to choose your version of timeline editor.",
      question: {
        videoType: "Do you want to use the broadcast video or an on-demand video ?",
        eventType: "Then which types of events do you intend to use ?",
        duration: "Then what is the duration of the show (in seconds, only important for video on demand) ?"
      },
      tooltip: {
        streamEvent: "for use with broadcast",
        mediaEvent: "only useful when a video-on-demand is present",
        keyEvent: "can be useful to remove elements added by stream or media events",
        timeEvent: "useful for splash screens and periodic logos",
        clockEvent: "useful for elements that need to appear at a certain clock based time"
      },
      timelineUI: {
        label: "Your TimeLine UI is",
        option: {
          vod: "On-demand Video UI",
          bc: "Broadcast UI",
          bcp: "Broadcast UI + Time",
          cui: "Complete UI"
        },
        timelineURL: "The URL of the Timeline application will be",
        next: "Next",
        errorSaving: "error saving option "
      }
    },
    title: "Timeline",
    range: "Bereich",
    duration: "Dauer (sec)",
    fps: "Frames pro Sekunde",
    select_range: "Bitte einen Bereich wählen",
    editting_range: "Bereich ändern {0}",
    no_selection: "Es ist kein Zeitbereich ausgewählt",
    new_project: "Neues Projekt {0}",
    existing_project: "Projekt von \"{0}\" Blog wiederherstellbar",
    restore: {
      button: {
        value: "Wiederherstellen"
      },
      wait: "Bitte {0} Sekunden warten.",
      skipload: " (wiederhergestellt {0} {1} Sekunden später)",
      scenario_loaded: "Szene wiederherstellen",
      nothing_to_restore: "Nichts zu wiederherstellen",
      restored: " {0} Wiederherstellungsprozesse",
      no_overwrite: "Den aktuellen Workspace behalten",
      ask_to_overwrite: "Den aktuellen Workspace überschreiben?"
    },
    publish: {
      button: {
        value: "Speichern"
      },
      publishing: "Speichern...",
      no_ovewrite: "Veröffentlichung verwerfen um Datenverlust zu vermeiden",
      warning_overwrite: "WARNUNG!:\nDer Vorgang wird das aktuelle Szenario überschreiben '{0}'\n\nMit Speichern fortfahren?",
      wait: "Bitte {0} Sekunden warten",
      saved: " (saved {0}s ago at {1})",
      notsaving: "Nicht speichern, das Szenario ist leer",
      scenario_published: "{0} Szenario mit {1} Ereignissen wurde veröffentlicht um {2}"
    },
    remove: {
      button: {
        value: "Szenario löschen"
      },
      deleting: "Löschen...",
      no_ovewrite: "Löschenvorgang abbrechen, um Datenverlust zu vermeiden",
      warning_overwrite: "WARNUNG!:\nDiese Aktion wird das aktuelle Szenario überschreiben '{0}'\n\nMit dem Löschenfortfahren?",
      wait: "Bitte {0} Sekunden warten.",
      saved: " (saved {0}s ago at {1})",
      notsaving: "Nicht speichern, das Szenario ist leer",
      scenario_deleted: "{0} Szenarios mit {1} Ereignissen gelöscht um {2}"
    },
    rangeEdit: {
      button: {
        value: "Bearbeiten aktivieren",
        title: "Bearbeiten des ausgewählten Zeitbereiches Aktualisieren und/oder Aktivieren"
      },
      button2: {
        value: "Auswahl umkehren",
        title: "Auswahlbereich umkehren mit next to the right"
      },
      event: {
        type: "Typ",
        keycode: "KeyCode",
        data: "Daten",
        begin: "Beginn",
        dura: "Dauer"
      },
      eventOptions: {
        streamEvent: "StreamEvent",
        keyEvent: "KeyEvent",
        mediaEvent: "MediaEvent",
        timeEvent: "TimeEvent",
        clockEvent: "ClockEvent"
      },
      time: "Zeit",
      page: "Seite"
    },
    rangeRemove: {
      button: {
        value: "Auswahl entfernen",
        title: "Auswahlbereich entfernen"
      }
    },
    rangeTool: {
      range: "Event Editing",
      swapButton: {
        value: "Auswahl umkehren",
        title: "Auswahlbereich umkehren next to the right"
      }
    },
    restoreButton: {
      error: "Ladefehler Szenario"
    },
    timelineEditor: {
      error: {
        unableToSet: "Warnung: nicht möglich den Wert zu setzen"
      },
      unsavedChanges: "You have unsaved changes"
    },
    dsmcc: {
      title: "Streamevent Container",
      button: {
        download: {
          link: "Download",
          title: "Ein DSMCC formatierte XML Datei abrufen für Streamevents"
        },
        save: {
          link: "Speichern",
          title: "DSMCC Einstellungen speichern"
        }
      },
      fileName: "dsmcc.xml",
      seID: {
        label: "StreamEvent ID",
        title: "StreamEvent ID (1-65535)"
      },
      seName: {
        label: "StreamEvent Name",
        title: "StreamEvent Name (TXT)"
      },
      seComponentTag: {
        label: "Component Tag",
        title: "Component Tag (1-255)"
      },
      labelUrl: "URL",
      error: {
        onLoad: "Fehler beim Erhalten der DSMCC Option, bitte Werte noch einmal überprüfen und gegebenenfalls ändern.",
        onSave: "Fehler beim Speichern der DSMCC Option"
      },
      saved: "DSMCC Information gespeichert"
    },
    elementMenu: {
      noFreeSpace: "kein freier Platz",
      enterKeyCode: "Keycode eingeben",
      addToTheTimeline: "Zu Timeline hinzufügen",
      back: "Zurück",
      addAPage: "Seite hinzufügen",
      inTheBack: "Im Hintergrund",
      backPage: "Rückseite",
      remove: "Löschen",
      addEventLinkToPage: "Ein Ereignis mit einer Seite verlinken",
      abbr: {
        streamEvent: "StreamEv",
        keyEvent: "KeyEv",
        mediaEvent: "MediaEv",
        timeEvent: "TimeEv",
        clockEvent: "ClockEv"
      },
      targetPage: "Zielseite",
      addElement: "Element hinzufügen"
    },
    bbBox: {
      title: "BeeBee Box",
      button: {
        link: "Generieren",
        title: "BeeBee Box formatiertes XML für Streamevents abrufen"
      },
      fileName: "beebeebox_streamevents.xml",
      no_streamevents: "kein Ereignis zu streamen",
      generated_streamevents: "Die Datei \"{0}\" wurde generiert.",
      no_project: "Kein Projekt geladen, dass in eine BeeBee Box Datei konvertiert werden kann"
    }
  },
  frontend: {
    error: {
      title: "Error",
      formatNotSupported: "A/V FORMAT WIRD NICHT UNTERSTÜTZT",
      connection: "Konnte keine Verbindung zum Server herstellen / die Verbindung wurde abgebrochen.",
      unidentified: "Nicht identifizierter Fehler",
      resource: "Unvollständige Ressourcen",
      corrupt: "Inhalte fehlerhaft oder ungültig",
      available: "Inhalte sind nicht verfügbar",
      positition: "Inhalte sind zur angegebenen Position nicht verfügbar",
      blocked: "Der Inhalt ist nicht verfügbar auf Grund seitenübergeordneter Kontrolle"
    },
    state: {
      stopped: "GESTOPPT",
      playing: "SPIELT",
      paused: "PAUSIERT",
      connected: "VERBINDET SICH",
      buffering: "PUFFERT",
      finished: "BEENDET"
    },
    video360: {
      deviceNotSupported: "Ihr Gerät wird nicht unterstützt.",
      errSyncPlayPos: "Die aktuelle Abspielposition wurde bereits berichtet. Es scheint, der Player spielt nicht.",
      errInvJson: "ungültiges json vom Server erhalten",
      errConfig: "ungültiges Konfigurationsobjekt. Zumindest die config.gatewayUrl muss gesetzt sein.",
      error: "Fehler"
    }
  },
  assetFinder: {
    placeholder: "VERGEBE MEDIENNAMEN"
  }
};
module.exports = de;