
/**
  * !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
  * ! WARNING: This is a generated file, any modifications may be overwritten !
  * !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
  *
  * Generated by "merge2file"
  *
  * Date: Fri Jun 08 2018 16:11:15 GMT+0200 (CEST)
  * Export target: "/Users/dufourd/IdeaProjects/MPAT-github/MPAT-core/web/app/plugins/mpat-plugins/react_src/localization/merge/export/fr.js"
  * Executor: dufourd
  * Duration: 0 ms.
*/
const fr = {
  appMgr: {
    exclude: "Exclude",
    navModels: {
      slideflow: "La navigation SlideFlow permet au créateur de contenu de concevoir des pages d'application plein écran et de spécifier l'ordre dans lequel elles sont présentées. L'expérience de l'utilisateur est semblable à la navigation à travers une présentation de diapositives PowerPoint. <br /> Bien que les pages puissent contenir des points chauds sélectionnables pour fournir du contenu supplémentaire et des informations relatives à la page actuellement présentée, la navigation entre les pages individuelles est séquentielle, permettant au créateur de contenu de construire Sur les informations présentées sur les pages antérieures et établir un flux narratif.",
      timeline: "La navigation basée sur les événements permet de diffuser le contenu de HbbTV par le programme de diffusion. L'exemple le plus courant est la présentation d'un bouton rouge au début d'un programme télévisé ou d'une annonce pour avertir le spectateur que des informations supplémentaires sont disponibles. Alors que l'apparition du bouton est généralement déclenchée par des événements de flux MPEG, des canaux alternatifs. par exemple. Les sockets web ou les demandes d'extraction d'applications peuvent également être utilisées. <br/> La navigation basée sur l'événement est la mieux adaptée aux petites insertions d'informations.",
      website: "Ce modèle est le plus utilisé pour les applications HbbTV. À partir d'une page de destination, les utilisateurs accèdent à un contenu supplémentaire en sélectionnant sur les boutons d'écran à l'aide des touches fléchées - semblable à un site Web. Souvent, les boutons couleur / numériques peuvent également être utilisés. <br/> Bien que ce modèle soit commun, il ne convient pas à la narration numérique car le chemin des utilisateurs est arbitraire, chaque page doit donc être seule."
    }
  },
  navModel: {
    sampleApp: "Exemple d'application",
    components: "Composants"
  },
  componentLoader: {
    containerTitle: {
      label: "Styles de conteneur"
    },
    fontSize: {
      label: "Taille de police",
      placeholder: "Taille en px"
    },
    fontWeight: {
      label: "Poids du texte",
      placeholder: "nombre de 100 à 900"
    },
    border: {
      label: "Bordure",
      placeholder: "Notation CSS \"border\" (par example: 1px solid #000)"
    },
    borderRadius: {
      label: "Radius Bordure",
      placeholder: "Taille en px"
    },
    margin: {
      label: "Marge externe",
      placeholder: "Taille en px"
    },
    padding: {
      label: "Marge interne",
      placeholder: "Taille en px"
    },
    color: {
      label: "Couleur du texte"
    },
    backgroundColor: {
      label: "Couleur de fond"
    },
    lineHeight: {
      label: "Line Height",
      placeHolder: "Line height in px"
    }
  },
  formTypes: {
    fontSize: {
      label: "Taille de police",
      placeholder: "14pt"
    },
    fontWeight: {
      label: "Poids du texte",
      placeholder: "number form 100 to 900"
    },
    border: {
      label: "Bordure",
      placeholder: "1px solid #000"
    },
    borderRadius: {
      label: "Bordure Radius",
      placeholder: "5px"
    },
    margin: {
      label: "Marge externe",
      placeholder: "0px"
    },
    padding: {
      label: "Marge interne",
      placeholder: "0px"
    },
    color: {
      label: "Couleur du texte",
      placeholder: "rgba() notation, HEX notation, color name"
    },
    backgroundColor: {
      label: "Couleur de fond",
      placeholder: "rgba() notation, HEX notation, color name"
    }
  },
  componentStateSelector: {
    enter: "Déclencher lorsque vous appuyez sur OK sur cet élément",
    focus: "Déclenchement lorsque l'élément est activé",
    chooseAnAction: "Choisissez une action",
    assetFinderPlaceholder: "TYPE ASSET NAME"
  },
  pageSelector: {
    loading: "CHARGEMENT",
    select: "SÉLECTIONNER",
    noTitle: "pas de titre",
    error: "ERREUR",
    assetFinderPlaceholder: "Tapez nom du \"asset\""
  },
  styles: {
    choose: "Choisissez",
    typeUrlOrSelectMedia: "Saisissez URL ou sélectionnez un média",
    ttSize: "Size in px, em, rem, pt, %",
    ttChoose: "Select the option you wish to use",
    ttImage: "Typme image url or choose from media library"
  },
  stylesPopup: {
    done: "Terminé"
  },
  textSubmit: {
    ok: "OK"
  },
  hotSpotEdit: {
    edit: "modifier",
    title: "Hot Spot Icon",
    active: "Actif",
    background: "Fond",
    icon: "Icône",
    orCustomFile: "ou fichier personnalisé",
    focused: "Concentré",
    normal: "Normal",
    iconColour: "Couleur de l'icône",
    contentPosition: "Content Position",
    location: "Emplacement",
    overTheIcon: "Sur l'icône",
    underTheIcon: "Sous l'icône",
    static: "Absolu / statique",
    staticContentPosition: "Position du contenu statique",
    top: "Haut",
    left: "Gauche",
    contentSize: "Taille du contenu (px)",
    width: "largeur",
    height: "Hauteur",
    ifEmptyFitContent: "Si vide, il correspond au contenu",
    keyBinding: "Reliure bouton",
    done: "Terminé",
    or: "ou",
    defaultIfAvailable: "Par défaut, si disponible",
    customIcon: "Icône personnalisée",
    choose: "Choisissez",
    selectRemoteButton: "Sélectionnez le bouton à distance"
  },
  imageCropper: {
    cropRatio: "Couper par rapport",
    cropImage: "Couper image",
    restore: "Restaurer",
    crop: "Couper",
    free: "Libre",
    ttCropRatio: "Select crop ratio",
    ttCropImage: "[tooltip Crop image]",
    ttRestore: "Undo crop changes",
    ttCrop: "Crop to selection",
    ttFree: "[tooltip Free]"
  },
  layoutBuilder: {
    unused: "Inutilisé",
    returnToPageEditor: "Retourner à l'éditeur de pages",
    save: "SAUVEGARDER",
    layoutBuilder: "Layout Builder",
    width: "largeur",
    height: "Hauteur",
    left: "Gauche",
    top: "Top",
    layoutTitle: "Titre de la mise en page",
    placeholderTitle: "Entrez le titre",
    previewBackground: "Prévisualiser le fond",
    placeholderBg: "Tapez url ou RGB",
    selectFile: "Choisissez Fichier",
    addAnotherBox: "Ajouter une autre case",
    add: "Ajouter",
    showSafeArea: "Montrer la zone sûre",
    showGridLines: "Afficher les lignes de grille",
    layoutUsedInPages: "Mise en page utilisée dans les pages",
    ttDeleteThisBox: "Delete this box",
    ttPinBox: "Lock the location of this box",
    ttTitle: "Give this layout a title so you can easily identify it",
    ttPreviewBg: "Add a temporary background so you can align your layout",
    ttAddBox: "Add a box to the layout",
    ttSafeZone: "Toggle the border markings, which show the 'safe' internal area to place your boxes",
    ttGridLines: "Toggle the gridlines, which help you align your layout"
  },
  undoRedo: {
    undo: "ANNULER",
    redo: "REFAIRE"
  },
  gallery: {
    removeImage: "Supprimer l'image",
    gallerySettings: "Paramètres de la galerie",
    orientation: "Orientation",
    horizontal: "Horizontal",
    vertical: "Verticale",
    imageCover: "Couverture d'image",
    zoomToFit: "Images agrandies pour s'adapter au conteneur",
    autoPlay: "Lecture automatique",
    ms: "Millisecondes",
    repeat: "Répéter",
    loop: "Boucle",
    useMediaKeys: "Utiliser les clés de médias",
    dots: "Points",
    arrows: "Flèches",
    chooseImages: "Choisissez images",
    clearSelections: "Clear Selections",
    noImages: "No Images",
    closeCropEditor: "Close crop editor",
    ttOrient: "Which axis should the images scroll along",
    ttImageCover: "Zoom images to fit the container",
    ttAutoplay: "Auto play the images on page load after n milliseconds",
    ttRepeat: "Loop the images",
    ttUseMediaKeys: "Use the media keys on the controller to navigate the gallery",
    ttDots: "Show dots under/beside the gallery for navigation",
    ttArrows: "Show arrows to navigate the gallery",
    ttClear: "Clear the gallery images selections"
  },
  stateEditor: {
    title: "Éditeur de composants",
    stateManagement: "Gestion de l'état",
    saveAsTemplate: "Enregistrer en tant que modèle",
    txtToggleStateDisplay: "State",
    ttTitle: "[tooltip title]",
    phTitle: "Insert state title"
  },
  pageModelCreator: {
    chooseCustomBox: "Choisissez des boîtes personnalisables",
    boxNb: "Numéro de boîte",
    isItEditable: "Modifiables",
    editableOrStyles: "Styles modifiables",
    addOrRemoveFromAllowedTypes: "Ajouter ou supprimer des types autorisés",
    allowedTypes: "Allowed types",
    compontentTypeToAddOrRemove: "Composant type to add or remove",
    any: "tout",
    cancel: "Annuler",
    create: "Créer"
  },
  pageEditor: {
    title: "Éditeur de pages",
    pageTitle: "Titre de la page",
    pageLink: "Lien vers la page",
    pageLayout: "Mise en page",
    pageParent: "Parent de la page",
    pageStyles: "Styles de page",
    pageBg: "Fond de page",
    scheduleUpdate: "Mise à jour programmé",
    unsavedChanges: "Vous avez des changements non enregistrés",
    untitled: "Untitled",
    errorWhileSaving: "Error while saving",
    confirmLeave: "Vous avez des changements non enregistrés, voulez-vous vraiment quitter la page ?",
    chooseBgColor: "Choisissez Couleur de fond",
    show: "Afficher",
    or: "OU",
    movedToStyle: "La couleur d'arrière-plan de la page et les médias ont été déplacés vers les styles de page",
    createModelFromPage: "Créer un modèle depuis la page",
    changeStyles: "Modifier les styles",
    file: "Fichier",
    create: "Créer",
    pageFromModel: "Page créée à partir du modèle",
    quickLink: "Lien rapide vers",
    ttQuickLink: "Shortcut to your other pages",
    saveModelInstance: "SAUVEGARDER INSTANCE DU MODELE",
    savePage: "SAUVEGARDER PAGE",
    duplicate: "dupliquer",
    ttDuplicate: "Duplicate this page",
    editLayout: "modifier la mise en page",
    ttEditLayout: "Switch to edit layout",
    ttUndoRedo: "Undo/Redo your changes",
    ttSavePage: "Save your changes to this page",
    typeUrlOrRgb: "TYPE URL OR RGB",
    noParent: "Aucun parent",
    phTitle: "ENTER TITLE HERE",
    phBorderSize: "size in px",
    phFontSize: "size in px, em, rem, pt, %",
    descActiveComponent: "if no value is set, global settings defined in customizer are applied.",
    ttTitle: "Give this page a title so you can easily identify it",
    ttLayout: "Choose one of your layouts as a template for this page",
    ttParent: "Choose one of your other pages as  the parent for this page",
    ttLink: "Open in Firefox with FireHbbTV activated",
    titleDownloadFireHbbTV: "Download the firefox add-on for previewing HbbTV pages",
    titleDownloadFirefox: "Download Firefox to use the add-on to visualize HbbTV pages",
    ttToggleUpdate: "Schedule this update rather than going live immediately",
    ttPageStyles: "Edit the page and component CSS styles (colours, fonts, borders)",
    ttCreateModelFromPage: "Create a model based on this page",
    ttEditIcon: "Edit this component",
    ttToggleDefault: "Toggle this as the default selected component on page",
    ttBackToPageEditor: "[tooltip: go back to page editor]",
    ttToggleState: "[tooltip: toggle state management]"
  },
  componentEditor: {
    editComponentStyle: "Modifier les Styles Composants",
    editInner: "Modifier...",
    titleComponentStyle: "Style de  Composant",
    componentLabel: "Étiquette de composant",
    componentType: "Type de composant",
    chooseView: "Choisissez Vue",
    hideFocus: "Cacher Focus",
    navigable: "Navigable",
    scrollable: "Scrollable",
    hotSpot: "Hot Spot",
    companionScreen: "Écran de compagnon",
    thisIsAModel: "Ce-ci est un modèle",
    editProtected: "L'édition est désactivée",
    editStubborn: "Modifier de toute façon",
    ttLabel: "Add a label to identify this component",
    ttType: "Change the component type",
    ttView: "[tooltip choose view]",
    ttFocus: "Show/Hide whether this component has focus",
    ttHotSpot: "Is this component a 'Hot Spot'",
    ttNavigable: "Can the user navigate to this component",
    ttScrollable: "[tooltip component scrollable]",
    ttCompScr: "Is this component shown on a companion screen",
    ttEditStyle: "Edit how this component looks (borders, colours, fonts, margin, padding...)",
    ttTargetComponent: "[tooltip component target]"
  },
  chrome: {
    ttchromeFields: "[tooltip chrome fields]",
    ttSaturation: "[tooltip saturation - pick the saturation of chosen color]",
    ttHue: "[tooltip hue]",
    ttAlpha: "[tooltip alpha]"
  },
  audio: {
    title: "Audio settings",
    audioUrlInput: "Source File",
    audioUrlLabel: "Source File",
    autoStart: "Auto Start",
    chooseFile: "Choose file",
    whenPageLoads: "When the page loads",
    repeat: "Repeat",
    loop: "Loop",
    ttAudioUrl: "Load audio from URL",
    ttChooseFile: "Select audio from disc or library",
    ttAutostart: "Play audio on page load when the page loads",
    ttRepeat: "Loop/Repeat audio",
    error: {
      formatNotSupported: "FORMAT A / V NON SUPPORTÉ",
      connection: "Impossible de se connecter au serveur ou connection perdu",
      unidentified: "Erreur non identifiée",
      resource: "Ressources insuffisantes",
      corrupt: "Contenu corrompu ou invalide",
      available: "Contenu non disponible",
      positition: "Contenu non disponible dans cette position donné",
      blocked: "Contenu non disponible en raison du contrôle parental"
    },
    state: {
      stopped: "ARRÊTÉ",
      playing: "LECTURE EN COURS",
      paused: "PAUSE",
      connected: "TENTATIVE DE CONNECTION",
      buffering: "Mise en mémoire tampon",
      finished: "Terminé"
    },
    backend: {
      title: "Les paramètres audio",
      audioUrlInput: "Fichier Source",
      audioUrlLabel: "Source Fichier",
      autoStart: "Démarrage automatique",
      chooseFile: "Choisissez Fichier",
      whenPageLoads: "Lorsque la page est chargée",
      repeat: "Répéter",
      loop: "Boucler"
    }
  },
  broadcast: {
    notice1: "Le composant de diffusion affiche le signal de diffusion sur le téléviseur.",
    notice2: "Si vous testez ce composant sur votre bureau en utilisant",
    notice3: "ou similaire, le composant sera affiché comme une boîte noire."
  },
  clone: {
    choose: "Choisissez",
    modelComponentPage: "Composant Model de Page",
    layoutBox: "Layout Box",
    component: "Composant",
    ttSelectModel: "Select the model/page that contains the component you want to clone",
    ttSelectComponent: "Select the component to clone",
    ttSourceLayout: "[tooltip source Layout]",
    title: "Paramètres de clonage"
  },
  image: {
    title: "Paramètres d'image",
    url: "URL de l'image",
    ttUrl: "Use a URL to fetch the image for this component",
    upload: " Télécharger l'image",
    ttUploadImg: "Upload an image for this component",
    chooseFromLibrary: "ou choisissez parmi la bibliothèque",
    ttChooseImg: "Select an image from the library for this component",
    choose: "Choisissez"
  },
  launcher: {
    backend: {
      launcherSettings: "Paramètres du Lanceur",
      toLinkAPage: "Pour créer un lien vers une page spécifique de ce composant, ajoutez ce qui suit à votre lien",
      launcherOrient: "Launcher Orientation",
      horizontal: "Horizontal",
      vertical: "Verticale",
      format: "Format du Lanceur",
      landscape: "Paysage",
      square: "Carré",
      squareWithInfo: "Carré avec Info",
      portrait: "Portrait",
      launcherStyle: "Style du Lanceur",
      optionStandard: "Standard",
      optionArte: "Arte",
      scrollStyle: "Style de défilement",
      optionCarousel: "Carrousel",
      optionPagination: "Pagination",
      paginationLoop: "Loop",
      showPaginationInfo: "Afficher les informations sur la pagination",
      addLauncherElement: "Ajouter l'élément Lanceur",
      launcherThumbnail: "Aperçu du Lanceur",
      launcherThumbnailUrl: "URL de l'aperçu du Lanceur",
      chooseThumbnail: "Choisissez une miniature",
      title: "Titre",
      launcherTitle: "Titre du Launceur",
      role: "Rôle",
      link: "Lien",
      controlTargetComponent: "Contrôle composant ciblé",
      chooseTargetFirst: "Choisir d'abord la cible!",
      launcherTargetUrl: "URL cible du lanceur",
      pages: "Pages",
      state: "Etat",
      description: "Description",
      launcherDescription: "Description du Lanceur",
      deleteLauncherElement: "Supprimer l'élément du Lanceur",
      optionalContentIcon: "Icône de contenu facultatif",
      none: "aucun",
      audio: "audio",
      picture: "image",
      text: "texte",
      video: "vidéo",
      ttLauncherOrientation: "[tooltip launcher orientation]",
      ttElementFormat: "[tooltip elementFormat]",
      ttLauncherStyle: "[tooltip LauncherStyle]",
      ttScrollStyle: "[tooltip ScrollStyle]",
      ttShowPaginationInfo: "[tooltip ShowPaginationInfo]",
      ttColumnsRows: "[tooltip Columns and Rows]",
      ttAddLauncherElement: "[tooltip addLauncherElement]",
      ttThumbnailUrl: "[tooltip Launcher Thumbnail URL]",
      ttThumbnailChoose: "[tooltip LChoose Launcher Thumbnail]",
      ttTitle: "[tooltip title]",
      ttRole: "[tooltip ttRole]",
      ttUrl: "[tooltip Target Url]",
      ttPages: "[tooltip PageSelector]",
      ttComponent: "[tooltip ComponentStateSelector]",
      ttDescription: "[tooltip Description]",
      ttDeleteElement: "[tooltip deleteLauncherElement]",
      ttOptionalContentIcon: "[tooltip optionalContentIcon]",
      menuOrient: "Orientation du menu"
    },
    frontend: {
      monthNames: [
        "JANVIER",
        "FÉVRIER",
        "MARS",
        "AVRIL",
        "MAI",
        "JUIN",
        "JUILLET",
        "AOÛT",
        "SEPTEMBRE",
        "OCTOBRE",
        "NOVEMBRE",
        "DÉCEMBRE"
      ],
      dayNames: [
        "DIMANCHE",
        "LUNDI",
        "MARDI",
        "MERCREDI",
        "JEUDI",
        "VENDREDI",
        "SAMEDI"
      ]
    }
  },
  link: {
    linkSettings: "Paramètres du lien",
    linkImageUrl: "Lien URL de l'image",
    placeHolderLinkImageUrl: "Lien URL de l'image",
    ttLinkImageUrl: "[tooltip LINK IMAGE URL]",
    chooseLinkImage: "Choisissez l'image du lien",
    ttChooseLinkImage: "[tooltip Choose Link Image]",
    linkFocusedImageUrl: "Link Focused Image URL",
    placeHolderLinkFocusedImageUrl: "LINK FOCUSED IMAGE URL",
    ttLinkFocusedImageUrl: "[tooltip LINK FOCUSED IMAGE URL]",
    chooseLinkFocusedImage: "Choose Link Focused Image",
    ttChooseLinkFocusedImage: "[tooltip Choose Link Focused Image]",
    linkLabel: "Étiquette de lien",
    placeHolderLinkLabel: "Étiquette de lien",
    ttLinkLabel: "[tooltip LINK LABEL]",
    or: "OU",
    linkTarget: "Lien cible",
    ttLinkTarget: "[tooltip Link Target]",
    placeHolderLinkUrl: "Url de lien",
    pages: "Pages",
    ttPages: "[tooltip Pages]",
    imageLayoutCover: "Couverture de la mise en page de l'image",
    ttImageLayoutCover: "[tooltip Image Layout Cover]"
  },
  list: {
    listSettings: "Paramètres de la liste",
    addListElement: "Ajouter un élément de liste",
    ttAddListElement: "[tooltip Add List Element]",
    title: "Titre",
    ttTitle: "[tooltip Element Title]",
    placeHolderTitle: "TITRE DE L'ÉLÉMENT",
    url: "URL",
    ttUrl: "[tooltip URL]",
    placeHolderUrl: "URL ELEMENT CIBLE",
    description: "Description",
    ttDesc: "[tooltip ELEMENT DESCRIPTION]",
    placeHolderDesc: "DESCRIPTION DE L'ÉLÉMENT",
    deleteListElement: "Supprimer l'élément de la liste",
    ttDeleteListElement: "[tooltip Delete List Element]"
  },
  menu: {
    menuSettings: "Paramètres du menu",
    addMenuItem: "Ajouter un élément de menu",
    ttAddMenuItem: "[tooltip Add Menu item]",
    title: "Titre",
    ttTitle: "[tooltip title]",
    sideMenu: "Menu latéral",
    showAsSideMenu: "Affiche en tant que menu latéral",
    ttSideMenu: "Show menu as side menu",
    menuOrient: "Orientation du menu",
    ttMenuOrient: "Menu Orientation",
    horizontal: "Horizontal",
    vertical: "Verticale",
    loop: "Boucle",
    restart: "Si la navigation doit recommencer à partir du premier élément après la dernière (et vice-versa) ou non",
    ttLoop: "Whether the navigation should restart from first item after the last one ( and viceversa ) or not.",
    showButtons: "Afficher les boutons",
    ttShowButtons: "Show Buttons",
    showRemoteKeys: "Afficher les touches de la télécommande",
    ttShowRemoteKeys: "Show Remote Keys",
    selectAction: "Sélectionnez l'action",
    goToPrevPage: "Aller à la page précédente",
    toggleApplication: "Activer l'application (afficher/cacher)",
    label: "Étiquette",
    ttLabel: "[tooltip label]",
    placeHolderLabel: "TEXTE MENU",
    remoteKey: "Bouton de télécommande",
    remoteControlKey: "Bouton de télécommande",
    ttRemoteControlKey: "Remote control key",
    role: "Rôle",
    ttRole: "[tooltip role]",
    link: "Lien",
    controlApplication: "Application de contrôle",
    controlTargetComponent: "Contrôlez le composant cible",
    launchAppViaAIT: "Lancer l'application via AIT",
    url: "URL",
    placeHolderUrl: "URL CIBLE",
    ttUrl: "Target url",
    pages: "Pages",
    ttPages: "Pages",
    appId: "App ID",
    ttAppId: "App ID",
    fallbackUrl: "URL de recule",
    ttFallbackUrl: "Fallback URL",
    appAction: "Application Action",
    ttAppAction: "Application Action",
    state: "Etat",
    ttState: "[tooltip State]",
    addItem: "Ajouter un élément de menu",
    ttAddItem: "Add menu item",
    deleteItem: "Supprimer l'élément de menu",
    ttDeleteItem: "Delete menu item"
  },
  redbutton: {
    redButtonSettings: "Paramètres du Bouton Rouge",
    buttonImage: "Image du bouton",
    placeHolderImageUrl: "URL DE L'IMAGE",
    ttImageUrl: "[tooltip IMAGE URL]",
    chooseImage: "Choisissez Image",
    ttChooseImage: "[tooltip Choose Image]",
    redButtonLink: "Lien bouton rouge",
    placeHolderRedButtonLink: "LIEN URL",
    ttRedButtonLink: "[tooltip redbutton LINK URL]",
    fadeInTime: "Durée de fondu (s)",
    ttFadeInTime: "[tooltip Fade-in Time in seconds]",
    placeHolderFadeInTime: "SECONDES",
    displayDuration: "Durée de l'affichage (s)",
    ttDisplayDuration: "[tooltip Display Duration in seconds]",
    placeHolderDisplayDuration: "SECONDES"
  },
  scribbleLive: {
    noPreviewAvailable: "Flux ScribleLive. Aucun aperçu spécifique disponible.",
    title: "Scribble Live",
    hint1: "Astuce: utilisez le",
    hint2: "Pour les paramètres de langue. (Pour afficher des informations liées au temps, par example",
    hint3: "il y a un an",
    ttFeedTitle: "[tooltip FeedTitle]",
    ttFeedId: "[tooltip FeedId]",
    ttFeedToken: "[tooltip FeedToken]",
    ttPolling: "[tooltip Polling]",
    ttFeedSize: "[tooltip FeedSize]"
  },
  scrolledText: {
    title: "Paramètres de défilement de texte",
    arrowColor: "Couleur de Flèche",
    activeArrowColor: "Couleur de Flèche Active",
    arrowPlacement: "Placement de flèche",
    onText: "Sur le texte",
    left: "gauche",
    right: "droite",
    aboveBelow: "Dessus/Dessous",
    outside: "à l'extérieur",
    noArrows: "pas de flêches",
    ttArrowColor: "[tooltip arrow color]",
    ttActiveArrowColor: "[tooltip active arrow color]",
    ttArrowPosition: "[tooltip arrow position]"
  },
  toggleTracking: {
    title: "Basculer les paramètres de suivi",
    enabledText: "Texte activé",
    ttEnabledText: "[tooltip Enabled Text]",
    disabledText: "Texte désactivé",
    ttDisabledText: "[tooltip Disabled Text]",
    button: "Bouton",
    ttButton: "[tooltip Button]"
  },
  video: {
    title: "Paramètres Vidéo",
    asset: "Asset",
    src: "Source Vidéo",
    placeHolderSrc: "URL VIDEO",
    or: "OU",
    chooseVideo: "Choisissez Vidéo",
    thumbnail: "Vignette Vidéo",
    placeHolderThumbnail: "URL VIGNETTE",
    chooseThumbnail: "Choisissez Vignette",
    autoPlay: "Lecture automatique",
    startPlaybackWhenPage: "Démarrer la lecture lorsque la page s'ouvre",
    repeat: "Répéter",
    loop: "Boucler vidéo",
    fullscreenStart: "Démarrage en plein écran",
    startVideoFullScr: "Démarrage en plein écran",
    removeBlackBars: "Retirer les bandes noires",
    zoomVideo: "Zoomer la vidéo pour supprimer les bandes noires",
    playIcon: "Icône lecture",
    showPlayIcon: "Afficher l'icône de lecteur quand la vidéo est prete",
    showNavBar: "Afficher la barre de navigation"
  },
  timeline: {
    wizard: {
      title: "TimeLine Wizard",
      welcome: "Welcome to the timeline wizard. There are a few questions you need to answer to choose your version of timeline editor.",
      question: {
        videoType: "Do you want to use the broadcast video or an on-demand video ?",
        eventType: "Then which types of events do you intend to use ?",
        duration: "Then what is the duration of the show (in seconds, only important for video on demand) ?"
      },
      tooltip: {
        streamEvent: "for use with broadcast",
        mediaEvent: "only useful when a video-on-demand is present",
        keyEvent: "can be useful to remove elements added by stream or media events",
        timeEvent: "useful for splash screens and periodic logos",
        clockEvent: "useful for elements that need to appear at a certain clock based time"
      },
      timelineUI: {
        label: "Your TimeLine UI is",
        option: {
          vod: "On-demand Video UI",
          bc: "Broadcast UI",
          bcp: "Broadcast UI + Time",
          cui: "Complete UI"
        },
        timelineURL: "The URL of the Timeline application will be",
        next: "Next",
        errorSaving: "error saving option "
      }
    },
    title: "Chronologie",
    range: "Rangée",
    duration: "Durée (sec)",
    fps: "Trames par seconde",
    select_range: "Please select a range",
    editting_range: "Editting range {0}",
    no_selection: "No time range currently selected",
    new_project: "Nouveau project {0}",
    existing_project: "Restauration de projet du blog \"{0}\" possible.",
    restore: {
      button: {
        value: "Restaurer"
      },
      wait: "Patientez {0} secondes.",
      skipload: " (restauré il-y-a {0} secondes a {1})",
      scenario_loaded: "Scénario pour {0} avec {1} évenements publié a {2}",
      nothing_to_restore: "Rien a restaurer",
      restored: "{0} évenements restauré.",
      no_overwrite: "Maintien de l'environnement de travail",
      ask_to_overwrite: "Écraser l'environnement de travail?"
    },
    publish: {
      button: {
        value: "Publier"
      },
      publishing: "En cours de publication...",
      no_ovewrite: "Annulation d'écrasement de scénario",
      warning_overwrite: "ATTENTION!:\nCeci écrasera le scénario pour le site '{0}'\n\nVoulez-vous cotinuer?",
      wait: "Patientez {0} secondes.",
      saved: " (sauvegardé il-y-a {0} secondes a {1})",
      notsaving: "Sauvegarde pas possible: scénario est vide",
      scenario_published: "Scénario pour {0} avec {1} évenements publié a {2}"
    },
    remove: {
      button: {
        value: "Publier"
      },
      deleting: "En cours de publication...",
      no_ovewrite: "Annulation d'écrasement de scénario",
      warning_overwrite: "ATTENTION!:\nCeci écrasera le scénario pour le site '{0}'\n\nVoulez-vous cotinuer?",
      wait: "Patientez {0} secondes.",
      saved: " (sauvegardé il-y-a {0} secondes a {1})",
      notsaving: "Sauvegarde pas possible: scénario est vide",
      scenario_deleted: "Scénario pour {0} avec {1} évenements publié a {2}"
    },
    rangeEdit: {
      button: {
        value: "Activer la modification",
        title: "Rafraîchissez et/ou activez la révision de la gamme de temps choisie"
      },
      button2: {
        value: "Échanger",
        title: "Échanger la gamme selectionné avec celui à côté à droit"
      },
      event: {
        type: "Type",
        keycode: "KeyCode",
        data: "Donnée",
        begin: "Début",
        dura: "Durée"
      },
      eventOptions: {
        streamEvent: "StreamEvent",
        keyEvent: "KeyEvent",
        mediaEvent: "MediaEvent",
        timeEvent: "TimeEvent",
        clockEvent: "ClockEvent"
      },
      time: "Temps",
      page: "Page"
    },
    rangeRemove: {
      button: {
        value: "Supprimer la selection",
        title: "Supprimer la gamme selectioné"
      }
    },
    rangeTool: {
      range: "Event Editing",
      swapButton: {
        value: "Échanger",
        title: "Échanger la gamme selectionné avec celui à côté à droit"
      }
    },
    restoreButton: {
      error: "Erreur chargeant le scénario"
    },
    timelineEditor: {
      error: {
        unableToSet: "Avertissement : incapable de mettre la valeur"
      },
      unsavedChanges: "You have unsaved changes"
    },
    dsmcc: {
      title: "Streamevent Containeur",
      button: {
        download: {
          link: "Télécharger",
          title: "Obtenez un XML formaté DSMCC pour les événements de flux"
        },
        save: {
          link: "Sauvegarder",
          title: "Sauvegarder les paramètres DSMCC"
        }
      },
      fileName: "dsmcc.xml",
      seID: {
        label: "StreamEvent ID",
        title: "StreamEvent ID (1-65535)"
      },
      seName: {
        label: "StreamEvent Name",
        title: "StreamEvent Name (TXT)"
      },
      seComponentTag: {
        label: "Composant Tag",
        title: "Composant Tag (1-255)"
      },
      labelUrl: "URL",
      error: {
        onLoad: "L'erreur en recevant l'option de DSMCC, modifiez des valeurs et essayez de nouveau",
        onSave: "Erreur sauvant l'option de DSMCC"
      },
      saved: "Les informations DSMCC sont sauvé"
    },
    elementMenu: {
      noFreeSpace: "aucun espace libre",
      enterKeyCode: "Saisissez code bouton",
      addToTheTimeline: "Ajoutez à la chronologie",
      back: "Retour",
      addAPage: "Ajouter une page",
      inTheBack: "vers l'arrière",
      backPage: "Arrière page",
      remove: "Enlever",
      addEventLinkToPage: "Ajoutez un événement lié à une page",
      abbr: {
        streamEvent: "StreamEv",
        keyEvent: "KeyEv",
        mediaEvent: "MediaEv",
        timeEvent: "TimeEv",
        clockEvent: "ClockEv"
      },
      targetPage: "Page cible",
      addElement: "Ajouter élément"
    }
  },
  frontend: {
    error: {
      title: "Error",
      formatNotSupported: "A/V FORMAT NOT SUPPORTED",
      connection: "Cannot connect to server or connection lost",
      unidentified: "Unidentified error",
      resource: "Insufficient resources",
      corrupt: "Content corrupt or invalid",
      available: "Content not available",
      positition: "Content not available at a givin position",
      blocked: "Content not available due to parental control"
    },
    state: {
      stopped: "STOPPED",
      playing: "PLAYING",
      paused: "PAUSED",
      connected: "CONNECTING",
      buffering: "BUFFERING",
      finished: "FINISHED"
    },
    video360: {
      deviceNotSupported: "Votre appareil n'est pas pris en charge.",
      errSyncPlayPos: "Sync of current playPosition already reported. It seems that the player is not playing",
      errInvJson: "get invalid json from server",
      errConfig: "invalid config object. at least config.gatewayUrl must be set.",
      error: "Erreur"
    }
  }
};
module.exports = fr;